<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\MM32SPIN0280_App.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\MM32SPIN0280_App.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Jul 29 15:44:09 2025
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; PLATFORM_Init &rArr; PLATFORM_PrintInfo &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[1a]">ADC2_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[1e]">COMP1_2_3_4_5_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[23]">CSM_IRQn_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[e]">HWDIV_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from mm32spin0280_it.o(i.HardFault_Handler) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from mm32spin0280_it.o(i.NMI_Handler) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[8]">PWM_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from mm32spin0280_it.o(i.PendSV_Handler) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from mm32spin0280_it.o(i.SVC_Handler) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from delay.o(i.SysTick_Handler) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_mm32spin0280.o(i.SystemInit) referenced from startup_mm32spin0280_keil.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[17]">TIM8_BRK_UP_TRG_COM_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[18]">TIM8_CC_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[21]">UART1_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[22]">UART2_IRQHandler</a> from mm32spin0280_it.o(i.UART2_IRQHandler) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[24]">UART3_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_mm32spin0280_keil.o(.text) referenced from startup_mm32spin0280_keil.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32spin0280_keil.o(.text)
 <LI><a href="#[28]">fputc</a> from platform.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[25]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(.text)
</UL>
<P><STRONG><a name="[7e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[80]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[81]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2b]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[82]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[83]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>COMP1_2_3_4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CSM_IRQn_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>HWDIV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM8_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin0280_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_PrintInfo
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_PrintInfo
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[87]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[30]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_dadd</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[88]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[89]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[8a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8b]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>AutoCalPllFactor</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, system_mm32spin0280.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockWithHsiPLL
</UL>

<P><STRONG><a name="[3e]"></a>DELAY_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, delay.o(i.DELAY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DELAY_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>DELAY_Ms</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, delay.o(i.DELAY_Ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DELAY_Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_LED_Toggle_Sample
</UL>

<P><STRONG><a name="[7d]"></a>EXTI_MemoryRemapConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_MemoryRemapConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setNVIC
</UL>

<P><STRONG><a name="[46]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write
</UL>

<P><STRONG><a name="[40]"></a>FLASH_ErasePage</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hal_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>FLASH_GetStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[47]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write
</UL>

<P><STRONG><a name="[42]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, hal_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write
</UL>

<P><STRONG><a name="[45]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write
</UL>

<P><STRONG><a name="[41]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[57]"></a>GPIO_Init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitLED
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[48]"></a>GPIO_LED_Toggle_Sample</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, gpio_led_toggle.o(i.GPIO_LED_Toggle_Sample))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_LED_Toggle_Sample &rArr; DELAY_Ms
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[4a]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_LED_Toggle_Sample
</UL>

<P><STRONG><a name="[49]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_LED_Toggle_Sample
</UL>

<P><STRONG><a name="[56]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitLED
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[59]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_LED_Enable
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mm32spin0280_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32spin0280_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[4c]"></a>PLATFORM_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, platform.o(i.PLATFORM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PLATFORM_Init &rArr; PLATFORM_PrintInfo &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_PrintInfo
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitLED
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>PLATFORM_InitConsole</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, platform.o(i.PLATFORM_InitConsole))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PLATFORM_InitConsole &rArr; UART_Init &rArr; RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_Init
</UL>

<P><STRONG><a name="[4e]"></a>PLATFORM_InitLED</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, platform.o(i.PLATFORM_InitLED))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PLATFORM_InitLED &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_LED_Enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_Init
</UL>

<P><STRONG><a name="[58]"></a>PLATFORM_LED_Enable</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, platform.o(i.PLATFORM_LED_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PLATFORM_LED_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitLED
</UL>

<P><STRONG><a name="[4f]"></a>PLATFORM_PrintInfo</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, platform.o(i.PLATFORM_PrintInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PLATFORM_PrintInfo &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_Init
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32spin0280_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitLED
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[70]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[50]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setNVIC
</UL>

<P><STRONG><a name="[5b]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hal_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = RCC_GetClocksFreq &rArr; RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_PrintInfo
</UL>

<P><STRONG><a name="[5d]"></a>RCC_GetHCLKFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[5e]"></a>RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5f]"></a>RCC_GetPCLK2Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5c]"></a>RCC_GetSysClockFreq</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, hal_rcc.o(i.RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[7c]"></a>Reset_MCU</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.Reset_MCU))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>Reset_Periph</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.Reset_Periph))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Reset_Periph &rArr; UART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mm32spin0280_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delay.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelayDecrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, system_mm32spin0280.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockWithHsiPLL &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToDefaultHSI
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>UART2_IRQHandler</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, mm32spin0280_it.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART2_IRQHandler &rArr; calculate_xmodem_crc
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_xmodem_crc
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin0280_keil.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>UART_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[6f]"></a>UART_Configure</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, uart_interrupt.o(i.UART_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UART_Configure &rArr; UART_Init &rArr; RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>UART_DeInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hal_uart.o(i.UART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exRCC_APB1PeriphReset
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exRCC_APB2PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Periph
</UL>

<P><STRONG><a name="[6d]"></a>UART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>UART_GetITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[71]"></a>UART_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[52]"></a>UART_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, hal_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_Init &rArr; RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[69]"></a>UART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>UART_SendData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_uart.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>UART_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_InitConsole
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
</UL>

<P><STRONG><a name="[75]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8c]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[5a]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_PrintInfo
</UL>

<P><STRONG><a name="[8d]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[8e]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[34]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[90]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[91]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[73]"></a>exRCC_APB1PeriphReset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_rcc.o(i.exRCC_APB1PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
</UL>

<P><STRONG><a name="[74]"></a>exRCC_APB2PeriphReset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_rcc.o(i.exRCC_APB2PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
</UL>

<P><STRONG><a name="[28]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, platform.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; PLATFORM_Init &rArr; PLATFORM_PrintInfo &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configure
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLATFORM_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_LED_Toggle_Sample
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setNVIC
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Periph
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_MCU
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7b]"></a>setNVIC</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main.o(i.setNVIC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setNVIC
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_MemoryRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[44]"></a>FLASH_Write</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, main.o(i.FLASH_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FLASH_Write &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Periph
</UL>

<P><STRONG><a name="[66]"></a>TimingDelayDecrement</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, delay.o(i.TimingDelayDecrement))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, delay.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Init
</UL>

<P><STRONG><a name="[6b]"></a>calculate_xmodem_crc</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, mm32spin0280_it.o(i.calculate_xmodem_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = calculate_xmodem_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_mm32spin0280.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetSysClock &rArr; SetSysClockWithHsiPLL &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockWithHsiPLL
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[67]"></a>SetSysClockToDefaultHSI</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, system_mm32spin0280.o(i.SetSysClockToDefaultHSI))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[64]"></a>SetSysClockWithHsiPLL</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, system_mm32spin0280.o(i.SetSysClockWithHsiPLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetSysClockWithHsiPLL &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_x_cycle
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[65]"></a>delay_x_cycle</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, system_mm32spin0280.o(i.delay_x_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_x_cycle
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockWithHsiPLL
</UL>

<P><STRONG><a name="[77]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[76]"></a>_printf_core</STRONG> (Thumb, 1760 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[7a]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[79]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
